#!/bin/bash
Login_discovery () {
port=($(/bin/netstat -nlput|awk -F":" '/Login/ {print $0}'|awk -F: '{print $2}'|awk '{print $1}'|grep -v "^$"))
#port=($(awk -F":" '/Login/ {print $0}' 195.txt|awk -F: '{print $2}'|awk '{print $1}'|grep -v "^$"))
	printf '{\n'
	printf '\t"data":[\n'
for((i=0;i<${#port[@]};++i))
{
	num=$(echo $((${#port[@]}-1)))
	if [ "$i" != ${num} ];
		then
        printf "\t\t{ \n"
        printf "\t\t\t\"{#LOGINPORT}\":\"${port[$i]}\"},\n"
		else
			printf  "\t\t{ \n"
			printf  "\t\t\t\"{#LOGINPORT}\":\"${port[$num]}\"}]}\n"
	fi
}
}


Master_discovery () {
port=($(/bin/netstat -nlput|awk -F":" '/Master/ {print $0}'|awk -F: '{print $2}'|awk '{print $1}'|grep -v "^$"))
        printf '{\n'
        printf '\t"data":[\n'
for((i=0;i<${#port[@]};++i))
{
        num=$(echo $((${#port[@]}-1)))
        if [ "$i" != ${num} ];
                then
        printf "\t\t{ \n"
        printf "\t\t\t\"{#MASTERPORT}\":\"${port[$i]}\"},\n"
                else
                        printf  "\t\t{ \n"
                        printf  "\t\t\t\"{#MASTERPORT}\":\"${port[$num]}\"}]}\n"
        fi
}
}

Gateway_discovery () {
port=($(/bin/netstat -nlput|awk -F":" '/Gateway/ {print $0}'|awk -F: '{print $2}'|awk '{print $1}'|grep -v "^$"))
        printf '{\n'
        printf '\t"data":[\n'
for((i=0;i<${#port[@]};++i))
{
        num=$(echo $((${#port[@]}-1)))
        if [ "$i" != ${num} ];
                then
        printf "\t\t{ \n"
        printf "\t\t\t\"{#GATEWAYPORT}\":\"${port[$i]}\"},\n"
                else
                        printf  "\t\t{ \n"
                        printf  "\t\t\t\"{#GATEWAYPORT}\":\"${port[$num]}\"}]}\n"
        fi
}
}

GameLogic_discovery () {
port=($(/bin/netstat -nlput|awk -F":" '/GameLogic/ {print $0}'|awk -F: '{print $2}'|awk '{print $1}'|grep -v "^$"))
        printf '{\n'
        printf '\t"data":[\n'
for((i=0;i<${#port[@]};++i))
{
        num=$(echo $((${#port[@]}-1)))
        if [ "$i" != ${num} ];
                then



        printf "\t\t{ \n"
        printf "\t\t\t\"{#GAMELOGICPORT}\":\"${port[$i]}\"},\n"
                else
                        printf  "\t\t{ \n"
                        printf  "\t\t\t\"{#GAMELOGICPORT}\":\"${port[$num]}\"}]}\n"
        fi
}
}



Database_discovery () {
port=($(/bin/netstat -nlput|awk -F":" '/Database/ {print $0}'|awk -F: '{print $2}'|awk '{print $1}'|grep -v "^$"))
        printf '{\n'
        printf '\t"data":[\n'
for((i=0;i<${#port[@]};++i))
{
        num=$(echo $((${#port[@]}-1)))
        if [ "$i" != ${num} ];
                then
        printf "\t\t{ \n"
        printf "\t\t\t\"{#DATABASEPORT}\":\"${port[$i]}\"},\n"
                else
                        printf  "\t\t{ \n"
                        printf  "\t\t\t\"{#DATABASEPORT}\":\"${port[$num]}\"}]}\n"
        fi
}
}



Datalog_discovery () {
port=($(/bin/netstat -nlput|awk -F":" '/Datelog/ {print $0}'|awk -F: '{print $2}'|awk '{print $1}'|grep -v "^$"))
        printf '{\n'
        printf '\t"data":[\n'
for((i=0;i<${#port[@]};++i))
{
        num=$(echo $((${#port[@]}-1)))
        if [ "$i" != ${num} ];
                then
        printf "\t\t{ \n"
        printf "\t\t\t\"{#DATALOGPORT}\":\"${port[$i]}\"},\n"
                else
                        printf  "\t\t{ \n"
                        printf  "\t\t\t\"{#DAALOGPORT}\":\"${port[$num]}\"}]}\n"
        fi
}
}


Recharges_discovery () {
port=($(/bin/netstat -nlput|awk -F":" '/Recharges/ {print $0}'|awk -F: '{print $2}'|awk '{print $1}'|grep -v "^$"))
        printf '{\n'
        printf '\t"data":[\n'
for((i=0;i<${#port[@]};++i))
{
        num=$(echo $((${#port[@]}-1)))
        if [ "$i" != ${num} ];
                then
        printf "\t\t{ \n"
        printf "\t\t\t\"{#RECHARGESPORT}\":\"${port[$i]}\"},\n"
                else
                        printf  "\t\t{ \n"
                        printf  "\t\t\t\"{#RECHARGESPORT}\":\"${port[$num]}\"}]}\n"
        fi
}
}


FlashPolicyServer_discovery () {
port=($(/bin/netstat -nlput|awk -F":" '/FlashPolicy/ {print $0}'|awk -F: '{print $2}'|awk '{print $1}'|grep -v "^$"))
        printf '{\n'
        printf '\t"data":[\n'
for((i=0;i<${#port[@]};++i))
{
        num=$(echo $((${#port[@]}-1)))
        if [ "$i" != ${num} ];
                then
        printf "\t\t{ \n"
        printf "\t\t\t\"{#FLASHPOLICYSERVERPORT}\":\"${port[$i]}\"},\n"
                else
                        printf  "\t\t{ \n"
                        printf  "\t\t\t\"{#FLASHPOLICYSERVERPORT}\":\"${port[$num]}\"}]}\n"
        fi
}
}




http_port () {
PORT=$(curl -o /dev/null -s -w %{http_code} http://60.191.140.200:$1/)
[ $PORT == 200 ] && echo ${PORT}
[ $PORT != 200 ] && echo ${PORT}
}

case "$1" in
port)
http_port $2
;;
login.discovery)
Login_discovery
;;
master.discovery)
Master_discovery
;;
gateway.discovery)
Gateway_discovery
;;
gamelogic.discovery)
GameLogic_discovery
;;
database.discovery)
Database_discovery
;;
datalog.discovery)
Datalog_discovery 
;;
recharges.discovery)
Recharges_discovery
;;
flashpolicyserver.discovery)
FlashPolicyServer_discovery
;;
test)
echo test
;;
*)
echo "Usage: $0 {login.discovery|master.discovery|gateway.discovery|gamelogic.discovery|database.discovery|datalog.discovery|recharges.discovery|flashpolicyserver.discovery}"
esac

